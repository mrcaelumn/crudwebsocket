// Code generated by goagen v1.4.1, DO NOT EDIT.
//
// API "crudws": Application User Types
//
// Command:
// $ goagen
// --design=github.com/mrcaelumn/crudwebsocket/api/design
// --out=$(GOPATH)/src/github.com/mrcaelumn/crudwebsocket/api
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
)

// version user type.
type version struct {
	// Git commit hash
	Git *string `form:"git,omitempty" json:"git,omitempty" yaml:"git,omitempty" xml:"git,omitempty"`
	// Application version
	Version *string `form:"version,omitempty" json:"version,omitempty" yaml:"version,omitempty" xml:"version,omitempty"`
}

// Validate validates the version type instance.
func (ut *version) Validate() (err error) {
	if ut.Version == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "version"))
	}
	return
}

// Publicize creates Version from version
func (ut *version) Publicize() *Version {
	var pub Version
	if ut.Git != nil {
		pub.Git = ut.Git
	}
	if ut.Version != nil {
		pub.Version = *ut.Version
	}
	return &pub
}

// Version user type.
type Version struct {
	// Git commit hash
	Git *string `form:"git,omitempty" json:"git,omitempty" yaml:"git,omitempty" xml:"git,omitempty"`
	// Application version
	Version string `form:"version" json:"version" yaml:"version" xml:"version"`
}

// Validate validates the Version type instance.
func (ut *Version) Validate() (err error) {
	if ut.Version == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "version"))
	}
	return
}
